<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.best.approveservice.dao.RoleDao">

    <resultMap type="cn.best.approveservice.entity.Role" id="RoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="creationTime" column="creation_time" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="VARCHAR"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RoleMap">
        select id,
               role,
               status,
               creation_time,
               update_time,
               role_name
        from hb_datayun.role
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RoleMap">
        select id,
               role,
               status,
               creation_time,
               update_time,role_name
        from hb_datayun.role limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="RoleMap">
        select
        id, role, status, creation_time, update_time,role_name
        from hb_datayun.role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="role != null">
                and role = #{role}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="creationTime != null">
                and creation_time = #{creationTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" parameterType="java.lang.String">
        insert into hb_datayun.role(role_name)
        values (#{roleName})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into hb_datayun.role(role, status, creation_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.role}, #{entity.status}, #{entity.creationTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into hb_datayun.role(role, status, creation_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.role}, #{entity.status}, #{entity.creationTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        role = values(role) , status = values(status) , creation_time = values(creation_time) , update_time =
        values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update hb_datayun.role
        <set>
            <if test="role != null">
                role = #{role},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="creationTime != null">
                creation_time = #{creationTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="roleName != null">
                role_name = #{roleName},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from hb_datayun.role
        where id = #{id}
    </delete>

</mapper>

